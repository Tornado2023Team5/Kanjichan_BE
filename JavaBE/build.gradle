plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.2'
    id 'io.spring.dependency-management' version '1.1.2'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group = 'com.github.Tornado2023Team5'
version = '0.0.1'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
//    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    implementation 'org.postgresql:postgresql:42.6.0'

    implementation 'com.google.guava:guava:32.1.2-jre'
    implementation 'com.theokanning.openai-gpt3-java:service:0.15.0'

    implementation 'com.google.maps:google-maps-services:2.2.0'
    implementation 'org.slf4j:slf4j-simple:1.7.25'

    implementation 'com.linecorp.bot:line-bot-spring-boot:6.0.0'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'
javadoc.options.encoding = 'UTF-8'

tasks.named('test') {
    useJUnitPlatform()
}
java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

jar {
    manifest {
        attributes(
                'Main-Class': 'com.github.tornado2023team5.kanjichan.KanjichanApplication'
        )
    }
}